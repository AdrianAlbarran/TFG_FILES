/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2306                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    arch        "LSB;label=32;scalar=64";
    class       volVectorField;
    location    "500";
    object      explicitSourceU;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -2 0 0 0 0];

internalField   uniform (100 0 0);

boundaryField
{
    frontAndBack
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    inlet
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    outlet
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    lowerWall
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    upperWall
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    motorBike_frt-fairing:001%1
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_windshield:002%2
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-rim:005%5
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-rim:010%10
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-rim:011%11
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-brake-disk:012%12
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_frame:016-shadow%13
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-susp:014%14
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-susp:014-shadow%15
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_frame:016%16
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-rim:005-shadow%17
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-chain-hub:022%22
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rearseat%24
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_frt-fairing%25
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_windshield%26
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_headlights%27
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_driversseat%28
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-body%29
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    motorBike_fuel-tank%30
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_exhaust%31
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-rim%32
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-mud-guard%33
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-rim%34
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-brake-disk%35
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-brake-caliper%36
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-tyre%37
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_hbars%38
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-forks%39
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_chain%40
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-tyre%41
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    motorBike_square-dial%42
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_round-dial%43
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_dial-holder%44
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-susp%45
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-brake-lights%46
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    motorBike_rear-light-bracket%47
    {
        type            calculated;
        value           uniform (100 0 0);
    }
    motorBike_frame%48
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-mud-guard%49
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-susp-spring-damp%50
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fairing-inner-plate%51
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_clutch-housing%52
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_radiator%53
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_water-pipe%54
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_water-pump%55
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_engine%56
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-shock-link%57
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-brake-fluid-pot-bracket%58
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-brake-fluid-pot%59
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_footpeg%60
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-chain-hub%61
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-brake-caliper%62
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rider-helmet%65
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rider-visor%66
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rider-boots%67
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rider-gloves%68
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rider-body%69
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_frame:0%70
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_frt-fairing:001-shadow%74
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_windshield-shadow%75
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-mud-guard-shadow%81
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_fr-wh-brake-disk-shadow%83
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-mud-guard-shadow%84
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-susp-spring-damp-shadow%85
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_radiator-shadow%86
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-shock-link-shadow%87
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rear-brake-fluid-pot-bracket-shadow%88
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    motorBike_rr-wh-chain-hub-shadow%89
    {
        type            calculated;
        value           nonuniform List<vector> 0;
    }
    procBoundary2to1
    {
        type            processor;
        value           uniform (100 0 0);
    }
    procBoundary2to4
    {
        type            processor;
        value           uniform (100 0 0);
    }
    procBoundary2to5
    {
        type            processor;
        value           uniform (100 0 0);
    }
}


// ************************************************************************* //
